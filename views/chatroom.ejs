<%- include("templates/header") %>

<div class="container p-5">
  <h2><%= lang.welcome_chatroom %> <%= username %></h2>
  <p><%= lang.enter_msg %></p>
  <button
    type="button"
    class="btn btn-secondary ml-2 download-btn"
    onclick="downloadUserHistory()"
  >
    Download User History
  </button>
  <button
    type="button"
    class="btn btn-secondary ml-2 download-btn"
    onclick="deleteUserHistory()"
  >
    Delete User History
  </button>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    .chat-container {
      max-width: 600px;
      margin: auto;
      padding: 20px;
      box-sizing: border-box;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      height: 400px;
      overflow-y: auto;
    }

    #input-field {
      max-width: 600px;
      margin: auto;
      padding: 20px;
      border-radius: 5px;
    }

    .message {
      margin-bottom: 10px;
    }

    .user-message {
      text-align: right;
      color: #007bff;
    }

    .bot-message {
      text-align: left;
      color: #28a745;
    }

    #user-input {
      width: 85%;
      resize: vertical;
    }

    .download-btn {
      margin-top: 10px;
    }
  </style>
  <script>
    // Check if it's the first message
    sessionStorage.setItem("isFirstMessage", "true");

    // Function to send message to the server and receive bot's response
    async function sendMessage() {
      const chatMessages = document.getElementById("chat-messages");
      const chatContainer = document.getElementById("chat-container");
      const userInput = document.getElementById("user-input");

      const userMessage = userInput.value;
      if (!userMessage.trim()) return;
      appendMessage(userMessage, "user");
      userInput.value = "";

      console.log(sessionStorage.getItem("isFirstMessage"));

      const route =
        sessionStorage.getItem("isFirstMessage") === "true"
          ? "/startConversation"
          : "/continueConversation";

      console.log(route);

      const response = await fetch(`/chat`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ userMessage, route }),
      });

      const data = await response.json();
      const botResponse = data.botResponse;

      // Append user message and bot response to the chat container
      appendMessage(botResponse, "bot");

      // After the first message, set isFirstMessage to false
      isFirstMessage = false;

      // Scroll to the bottom of the chat container
      chatContainer.scrollTop = chatContainer.scrollHeight;

      if (sessionStorage.getItem("isFirstMessage") === "true") {
        sessionStorage.setItem("isFirstMessage", "false");
      }
    }

    // Function to append a message to the chat container
    function appendMessage(message, sender) {
      const chatMessages = document.getElementById("chat-messages");
      const messageElement = document.createElement("div");
      messageElement.textContent = message;
      messageElement.classList.add("message");
      if (sender === "user") {
        messageElement.classList.add("user-message");
      } else if (sender === "bot") {
        messageElement.classList.add("bot-message");
      }
      chatMessages.appendChild(messageElement);

      window.stop();
    }

    // Function to download user history as a text file
    async function downloadUserHistory() {
      const response = await fetch("/downloadUserHistory");
      const blob = await response.blob();

      // Create a temporary URL for the blob
      const url = window.URL.createObjectURL(blob);

      // Create a link element and trigger the download
      const link = document.createElement("a");
      link.href = url;
      link.download = "user_history.txt";
      document.body.appendChild(link);
      link.click();

      // Clean up
      window.URL.revokeObjectURL(url);
      link.remove();
    }

    // Function to delete user history and clear chat messages
    async function deleteUserHistory() {
      try {
        // Make a GET request to the proxy route to delete user history
        const response = await fetch("/deleteUserHistory");

        // Check if the response was successful
        if (!response.ok) {
          throw new Error("Failed to delete user history");
        }

        // Clear the chat messages
        const chatMessages = document.getElementById("chat-messages");
        chatMessages.innerHTML = ""; // Clear all the child elements

        // Log success message or perform any other action if needed
        console.log("User history deleted successfully");
      } catch (error) {
        // Handle any errors
        console.error("Error:", error.message);
        // Display error message to the user or perform any other action if needed
      }
    }
  </script>

  <body>
    <div class="chat-container" id="chat-container">
      <div id="chat-messages"></div>
    </div>
    <div id="input-field">
      <form action="/text-input" method="POST" id="text-form" class="d-flex">
        <input
          type="text"
          id="user-input"
          name="user"
          placeholder="<%= lang.placeholder %>"
          class="form-control"
        />
        <button
          type="submit"
          class="btn btn-primary ml-2"
          onclick="sendMessage()"
        >
          <%= lang.send %>
        </button>
      </form>
    </div>
    <div class="d-flex justify-content-center"></div>
  </body>
</div>

<%- include("templates/footer") %>
